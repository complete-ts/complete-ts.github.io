"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3071],{2820:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>i});var s=n(1085),a=n(1184);const r={},l="types/Immutable",c={id:"complete-common/types/Immutable",title:"types/Immutable",description:"Type Aliases",source:"@site/docs/complete-common/types/Immutable.md",sourceDirName:"complete-common/types",slug:"/complete-common/types/Immutable",permalink:"/complete-common/types/Immutable",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"types/IRange",permalink:"/complete-common/types/IRange"},next:{title:"types/NaturalNumbersLessThan",permalink:"/complete-common/types/NaturalNumbersLessThan"}},m={},i=[{value:"Type Aliases",id:"type-aliases",level:2},{value:"Immutable&lt;T&gt;",id:"immutablet",level:3},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Defined in",id:"defined-in",level:4}];function o(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"typesimmutable",children:"types/Immutable"})}),"\n",(0,s.jsx)(t.h2,{id:"type-aliases",children:"Type Aliases"}),"\n",(0,s.jsx)(t.h3,{id:"immutablet",children:"Immutable<T>"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"type Immutable<T>: T extends ImmutablePrimitive ? T : T extends infer U[] ? ImmutableArray<U> : T extends Map<infer K, infer V> ? ImmutableMap<K, V> : T extends Set<infer M> ? ImmutableSet<M> : ImmutableObject<T>;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Immutable is a utility type that will make the given array/map/set/object recursively read-only."}),"\n",(0,s.jsx)(t.p,{children:"You can use this type to easily build safe data structures."}),"\n",(0,s.jsxs)(t.p,{children:["From: ",(0,s.jsx)(t.a,{href:"https://stackoverflow.com/questions/41879327/deepreadonly-object-typescript",children:"https://stackoverflow.com/questions/41879327/deepreadonly-object-typescript"})]}),"\n",(0,s.jsx)(t.h4,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{children:"Type Parameter"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"T"})})})})]}),"\n",(0,s.jsx)(t.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/complete-ts/complete/blob/e4c07d57386e06c666c5f47f1c78d667b6ec4f62/packages/complete-common/src/types/Immutable.ts#L8",children:"types/Immutable.ts:8"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},1184:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>c});var s=n(4041);const a={},r=s.createContext(a);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);