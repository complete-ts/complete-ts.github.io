"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5523],{6395:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>a});var d=n(1085),s=n(1184);const r={},c="types/AddSubtract",i={id:"complete-common/types/AddSubtract",title:"types/AddSubtract",description:"Type Aliases",source:"@site/docs/complete-common/types/AddSubtract.md",sourceDirName:"complete-common/types",slug:"/complete-common/types/AddSubtract",permalink:"/complete-common/types/AddSubtract",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"functions/utils",permalink:"/complete-common/functions/utils"},next:{title:"types/CompositionTypeSatisfiesEnum",permalink:"/complete-common/types/CompositionTypeSatisfiesEnum"}},l={},a=[{value:"Type Aliases",id:"type-aliases",level:2},{value:"Add&lt;A, B&gt;",id:"adda-b",level:3},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Subtract&lt;A, B&gt;",id:"subtracta-b",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"Defined in",id:"defined-in-1",level:4}];function o(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.header,{children:(0,d.jsx)(t.h1,{id:"typesaddsubtract",children:"types/AddSubtract"})}),"\n",(0,d.jsx)(t.h2,{id:"type-aliases",children:"Type Aliases"}),"\n",(0,d.jsx)(t.h3,{id:"adda-b",children:"Add<A, B>"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-ts",children:"type Add<A, B>: Length<[...BuildTuple<A>, ...BuildTuple<B>]>;\n"})}),"\n",(0,d.jsx)(t.p,{children:"Helper type to add two other types."}),"\n",(0,d.jsxs)(t.p,{children:["From: ",(0,d.jsx)(t.a,{href:"https://gist.github.com/ryandabler/8b4ff4f36aed47bc09acc03174638468",children:"https://gist.github.com/ryandabler/8b4ff4f36aed47bc09acc03174638468"})]}),"\n",(0,d.jsx)(t.h4,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.th,{children:"Type Parameter"})})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"A"})," ",(0,d.jsx)(t.em,{children:"extends"})," ",(0,d.jsx)(t.code,{children:"number"})]})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"B"})," ",(0,d.jsx)(t.em,{children:"extends"})," ",(0,d.jsx)(t.code,{children:"number"})]})})]})]}),"\n",(0,d.jsx)(t.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,d.jsx)(t.p,{children:(0,d.jsx)(t.a,{href:"https://github.com/complete-ts/complete/blob/e4c07d57386e06c666c5f47f1c78d667b6ec4f62/packages/complete-common/src/types/AddSubtract.ts#L6",children:"types/AddSubtract.ts:6"})}),"\n",(0,d.jsx)(t.hr,{}),"\n",(0,d.jsx)(t.h3,{id:"subtracta-b",children:"Subtract<A, B>"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-ts",children:"type Subtract<A, B>: A extends A ? BuildTuple<A> extends [...(infer U), ...BuildTuple<B>] ? Length<U> : never : never;\n"})}),"\n",(0,d.jsx)(t.p,{children:"Helper type to subtract two other types."}),"\n",(0,d.jsxs)(t.p,{children:["From: ",(0,d.jsx)(t.a,{href:"https://gist.github.com/ryandabler/8b4ff4f36aed47bc09acc03174638468",children:"https://gist.github.com/ryandabler/8b4ff4f36aed47bc09acc03174638468"})]}),"\n",(0,d.jsx)(t.h4,{id:"type-parameters-1",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsx)(t.tr,{children:(0,d.jsx)(t.th,{children:"Type Parameter"})})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"A"})," ",(0,d.jsx)(t.em,{children:"extends"})," ",(0,d.jsx)(t.code,{children:"number"})]})}),(0,d.jsx)(t.tr,{children:(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"B"})," ",(0,d.jsx)(t.em,{children:"extends"})," ",(0,d.jsx)(t.code,{children:"number"})]})})]})]}),"\n",(0,d.jsx)(t.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,d.jsx)(t.p,{children:(0,d.jsx)(t.a,{href:"https://github.com/complete-ts/complete/blob/e4c07d57386e06c666c5f47f1c78d667b6ec4f62/packages/complete-common/src/types/AddSubtract.ts#L15",children:"types/AddSubtract.ts:15"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},1184:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var d=n(4041);const s={},r=d.createContext(s);function c(e){const t=d.useContext(r);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),d.createElement(r.Provider,{value:t},e.children)}}}]);