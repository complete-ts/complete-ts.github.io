"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[914],{1546:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>a});var n=t(1085),s=t(1184);const l={},i="strict-array-methods",o={id:"eslint-plugin-complete/rules/strict-array-methods",title:"strict-array-methods",description:"Requires boolean return types on the following array method functions:",source:"@site/docs/eslint-plugin-complete/rules/strict-array-methods.md",sourceDirName:"eslint-plugin-complete/rules",slug:"/eslint-plugin-complete/rules/strict-array-methods",permalink:"/eslint-plugin-complete/rules/strict-array-methods",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"require-variadic-function-argument",permalink:"/eslint-plugin-complete/rules/require-variadic-function-argument"},next:{title:"strict-enums",permalink:"/eslint-plugin-complete/rules/strict-enums"}},c={},a=[{value:"Rule Details",id:"rule-details",level:2},{value:"Options and Defaults",id:"options-and-defaults",level:2},{value:"Resources",id:"resources",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"strict-array-methods",children:(0,n.jsx)(r.code,{children:"strict-array-methods"})})}),"\n",(0,n.jsx)(r.p,{children:"Requires boolean return types on the following array method functions:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every",children:(0,n.jsx)(r.code,{children:"Array.prototype.every"})})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter",children:(0,n.jsx)(r.code,{children:"Array.prototype.filter"})})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find",children:(0,n.jsx)(r.code,{children:"Array.prototype.find"})})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex",children:(0,n.jsx)(r.code,{children:"Array.prototype.findIndex"})})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLast",children:(0,n.jsx)(r.code,{children:"Array.prototype.findLast"})})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLastIndex",children:(0,n.jsx)(r.code,{children:"Array.prototype.findLastIndex"})})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some",children:(0,n.jsx)(r.code,{children:"Array.prototype.some"})})}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"rule-details",children:"Rule Details"}),"\n",(0,n.jsxs)(r.p,{children:["Normally, the ",(0,n.jsx)(r.a,{href:"https://typescript-eslint.io/rules/strict-boolean-expressions/",children:(0,n.jsx)(r.code,{children:"@typescript-eslint/strict-boolean-expressions"})})," ESLint rule catches bugs where you are supposed to put a boolean value but accidentally put something else. Unfortunately, ",(0,n.jsx)(r.a,{href:"https://github.com/typescript-eslint/typescript-eslint/issues/8016",children:"that rule does not catch this mistake when using array methods"}),"."]}),"\n",(0,n.jsx)(r.p,{children:"Thus, an additional ESLint rule is necessary to handle this."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"// Bad\nconst numbers: number[] = [];\nconst filteredNumbers = numbers.filter((element) => {\n  return element;\n});\n\n// Good\nconst numbers: number[] = [];\nconst filteredNumbers = numbers.filter((element) => {\n  return element !== 0;\n});\n"})}),"\n",(0,n.jsx)(r.h2,{id:"options-and-defaults",children:"Options and Defaults"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-json",children:'{\n  "rules": {\n    "complete/strict-array-methods": "error"\n  }\n}\n'})}),"\n",(0,n.jsx)(r.p,{children:"This rule is not configurable."}),"\n",(0,n.jsx)(r.h2,{id:"resources",children:"Resources"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"../..",children:"How to use this rule"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://github.com/complete-ts/complete/blob/main/packages/eslint-plugin-complete/src/rules/strict-array-methods.ts",children:"Rule source"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://github.com/complete-ts/complete/blob/main/packages/eslint-plugin-complete/tests/rules/strict-array-methods.test.ts",children:"Test source"})}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1184:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>o});var n=t(4041);const s={},l=n.createContext(s);function i(e){const r=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(l.Provider,{value:r},e.children)}}}]);