"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8838],{190:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>a,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var t=s(1085),o=s(1184);const l={},i="no-confusing-set-methods",c={id:"eslint-plugin-complete/rules/no-confusing-set-methods",title:"no-confusing-set-methods",description:"Disallows the Set.keys and the Set.entries methods.",source:"@site/docs/eslint-plugin-complete/rules/no-confusing-set-methods.md",sourceDirName:"eslint-plugin-complete/rules",slug:"/eslint-plugin-complete/rules/no-confusing-set-methods",permalink:"/eslint-plugin-complete/rules/no-confusing-set-methods",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"newline-between-switch-case",permalink:"/eslint-plugin-complete/rules/newline-between-switch-case"},next:{title:"no-empty-jsdoc",permalink:"/eslint-plugin-complete/rules/no-empty-jsdoc"}},r={},d=[{value:"Rule Details",id:"rule-details",level:2},{value:"Options and Defaults",id:"options-and-defaults",level:2},{value:"Resources",id:"resources",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"no-confusing-set-methods",children:(0,t.jsx)(n.code,{children:"no-confusing-set-methods"})})}),"\n",(0,t.jsxs)(n.p,{children:["Disallows the ",(0,t.jsx)(n.code,{children:"Set.keys"})," and the ",(0,t.jsx)(n.code,{children:"Set.entries"})," methods."]}),"\n",(0,t.jsxs)(n.p,{children:["These methods serve no purpose and should instead be replaced with the ",(0,t.jsx)(n.code,{children:"Set.values"})," method (or implicit iteration if the set is being used inside of a for loop)."]}),"\n",(0,t.jsx)(n.h2,{id:"rule-details",children:"Rule Details"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"// Bad\nfor (const key of mySet.keys()) {\n}\nfor (const [key, value] of mySet.entries()) {\n}\n\n// Good\nfor (const value of mySet) {\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options-and-defaults",children:"Options and Defaults"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "rules": {\n    "complete/no-confusing-set-methods": "error"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"This rule is not configurable."}),"\n",(0,t.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../..",children:"How to use this rule"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/complete-ts/complete/blob/main/packages/eslint-plugin-complete/src/rules/no-confusing-set-methods.ts",children:"Rule source"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/complete-ts/complete/blob/main/packages/eslint-plugin-complete/tests/rules/no-confusing-set-methods.test.ts",children:"Test source"})}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},1184:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var t=s(4041);const o={},l=t.createContext(o);function i(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);