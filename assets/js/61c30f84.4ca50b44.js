"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9784],{7572:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var t=s(1085),o=s(1184);const l={},r="no-unnecessary-assignment",i={id:"eslint-plugin-complete/rules/no-unnecessary-assignment",title:"no-unnecessary-assignment",description:"Disallows useless assignments.",source:"@site/docs/eslint-plugin-complete/rules/no-unnecessary-assignment.md",sourceDirName:"eslint-plugin-complete/rules",slug:"/eslint-plugin-complete/rules/no-unnecessary-assignment",permalink:"/eslint-plugin-complete/rules/no-unnecessary-assignment",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"no-undefined-return-type",permalink:"/eslint-plugin-complete/rules/no-undefined-return-type"},next:{title:"no-unsafe-plusplus",permalink:"/eslint-plugin-complete/rules/no-unsafe-plusplus"}},a={},c=[{value:"Rule Details",id:"rule-details",level:2},{value:"Options and Defaults",id:"options-and-defaults",level:2},{value:"Resources",id:"resources",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"no-unnecessary-assignment",children:(0,t.jsx)(n.code,{children:"no-unnecessary-assignment"})})}),"\n",(0,t.jsx)(n.p,{children:"Disallows useless assignments."}),"\n",(0,t.jsx)(n.h2,{id:"rule-details",children:"Rule Details"}),"\n",(0,t.jsxs)(n.p,{children:["Sometimes, refactoring can lead to assignment statements that were once useful but are now redundant. This rule helps you clean up the dead code in a similar way that the ",(0,t.jsx)(n.a,{href:"https://typescript-eslint.io/rules/no-unnecessary-condition/",children:(0,t.jsx)(n.code,{children:"@typescript-eslint/no-unnecessary-condition"})})," rule does."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'// Bad\ndeclare let foo: 1;\ndeclare let bar: 1;\nfoo = bar;\n\n// Bad\ndeclare let foo: number;\nfoo += 0;\n\n// Bad\ndeclare let foo: string;\nfoo += "";\n\n// Bad\ndeclare const foo: boolean;\nconst bar = foo || false;\nconst baz = foo && true;\n\n// Bad\ndeclare const foo: number;\nconst bar = foo || 0;\n\n// Bad\ndeclare const foo: string;\nconst bar = foo || "";\n\n// Bad\ndeclare const foo: string | null;\nconst bar = foo ?? null;\n\n// Bad\ndeclare const foo: string | undefined;\nconst bar = foo ?? undefined;\n'})}),"\n",(0,t.jsx)(n.p,{children:'Note that while "<<" is technically a useless operator when combined with 0, this rule will not report on it so that bit flag enums will not cause false positives.'}),"\n",(0,t.jsx)(n.h2,{id:"options-and-defaults",children:"Options and Defaults"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "rules": {\n    "complete/no-unnecessary-assignment": "error"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"This rule is not configurable."}),"\n",(0,t.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../..",children:"How to use this rule"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/complete-ts/complete/blob/main/packages/eslint-plugin-complete/src/rules/no-unnecessary-assignment.ts",children:"Rule source"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/complete-ts/complete/blob/main/packages/eslint-plugin-complete/tests/rules/no-unnecessary-assignment.test.ts",children:"Test source"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},1184:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>i});var t=s(4041);const o={},l=t.createContext(o);function r(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);