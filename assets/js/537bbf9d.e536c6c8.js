"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2207],{3637:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>a,frontMatter:()=>i,metadata:()=>d,toc:()=>o});var s=t(1085),l=t(1184);const i={},r="eslint-plugin-complete",d={id:"eslint-plugin-complete",title:"eslint-plugin-complete",description:"npm version",source:"@site/docs/eslint-plugin-complete.md",sourceDirName:".",slug:"/eslint-plugin-complete",permalink:"/eslint-plugin-complete",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"eslint-config-complete",permalink:"/eslint-config-complete"},next:{title:"Comments",permalink:"/eslint-plugin-complete/comments"}},c={},o=[{value:"Introduction",id:"introduction",level:2},{value:"Install",id:"install",level:2},{value:"Using <code>complete-lint</code>",id:"using-complete-lint",level:3},{value:"Manually",id:"manually",level:3},{value:"Usage",id:"usage",level:2},{value:"Configs",id:"configs",level:2},{value:"Rules",id:"rules",level:2},{value:"Automatic Fixing",id:"automatic-fixing",level:2},{value:"Comment Formatting",id:"comment-formatting",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"eslint-plugin-complete",children:(0,s.jsx)(n.code,{children:"eslint-plugin-complete"})})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/eslint-plugin-complete",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/npm/v/eslint-plugin-complete.svg",alt:"npm version"})})}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:["This is an ",(0,s.jsx)(n.a,{href:"https://eslint.org/",children:"ESLint"})," plugin containing rules that can help make your TypeScript code more safe or more strict."]}),"\n",(0,s.jsx)(n.h2,{id:"install",children:"Install"}),"\n",(0,s.jsxs)(n.h3,{id:"using-complete-lint",children:["Using ",(0,s.jsx)(n.code,{children:"complete-lint"})]}),"\n",(0,s.jsxs)(n.p,{children:["This package is part of the ",(0,s.jsx)(n.a,{href:"/complete-lint",children:(0,s.jsx)(n.code,{children:"complete-lint"})})," meta-linting package. If you want to enable a comprehensive ESLint config in your TypeScript project as quickly as possible, it is recommended that instead of consuming ",(0,s.jsx)(n.code,{children:"eslint-plugin-complete"})," directly, you instead list ",(0,s.jsx)(n.code,{children:"complete-lint"})," as a dependency, as that will install the plugin, the config, and other goodies. (However, ",(0,s.jsx)(n.code,{children:"complete-lint"})," will not work with the ",(0,s.jsx)(n.a,{href:"https://pnpm.io/",children:"pnpm"})," package manager, since pnpm does not handle transitive dependencies properly.)"]}),"\n",(0,s.jsxs)(n.p,{children:["For installation instructions, see ",(0,s.jsxs)(n.a,{href:"/complete-lint",children:["the ",(0,s.jsx)(n.code,{children:"complete-lint"})," page"]}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"manually",children:"Manually"}),"\n",(0,s.jsxs)(n.p,{children:["If you do not want to use the ",(0,s.jsx)(n.code,{children:"complete-lint"})," meta-package, then you can install this plugin manually:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm install --save-dev eslint typescript eslint-plugin-complete\n"})}),"\n",(0,s.jsxs)(n.p,{children:["(",(0,s.jsx)(n.code,{children:"eslint"})," and ",(0,s.jsx)(n.code,{children:"typescript"})," are peer-dependencies.)"]}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["If you are using ",(0,s.jsx)(n.a,{href:"/eslint-config-complete",children:(0,s.jsx)(n.code,{children:"eslint-config-complete"})}),', then this plugin is automatically enabled. Otherwise, you can manually enable this plugin and the recommended rules with the following "eslint.config.mjs" file:']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'// @ts-check\n\nimport ESLintPluginComplete from "eslint-plugin-complete";\nimport tseslint from "typescript-eslint";\n\nexport default tseslint.config(\n  {\n    plugins: {\n      complete: ESLintPluginComplete,\n    },\n  },\n\n  ...ESLintPluginComplete.configs.recommended,\n);\n'})}),"\n",(0,s.jsx)(n.p,{children:"Alternative, you can omit the recommended config and just enable the specific rules that you need:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'// @ts-check\n\nimport ESLintPluginComplete from "eslint-plugin-complete";\nimport tseslint from "typescript-eslint";\n\nexport default tseslint.config({\n  plugins: {\n    complete: ESLintPluginComplete,\n  },\n\n  rules: {\n    "complete/no-let-any": "error",\n  },\n});\n'})}),"\n",(0,s.jsx)(n.h2,{id:"configs",children:"Configs"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"recommended"})," - Currently, every rule in this plugin is recommended."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"rules",children:"Rules"}),"\n",(0,s.jsx)(n.p,{children:"Each rule has emojis denoting:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 - if it belongs to the ",(0,s.jsx)(n.code,{children:"recommended"})," configuration"]}),"\n",(0,s.jsxs)(n.li,{children:["\ud83d\udd27 - if some problems reported by the rule are automatically fixable by the ",(0,s.jsx)(n.code,{children:"--fix"})," ",(0,s.jsx)(n.a,{href:"https://eslint.org/docs/latest/user-guide/command-line-interface#fixing-problems",children:"command line option"})]}),"\n",(0,s.jsx)(n.li,{children:"\ud83d\udcad - if it requires type information"}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"\u2705"}),(0,s.jsx)(n.th,{children:"\ud83d\udd27"}),(0,s.jsx)(n.th,{children:"\ud83d\udcad"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/complete-sentences-jsdoc",children:(0,s.jsx)(n.code,{children:"complete/complete-sentences-jsdoc"})})}),(0,s.jsx)(n.td,{children:"Requires complete sentences for JSDoc comments"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/complete-sentences-line-comments",children:(0,s.jsx)(n.code,{children:"complete/complete-sentences-line-comments"})})}),(0,s.jsx)(n.td,{children:"Requires complete sentences for multi-line leading line comments"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/consistent-enum-values",children:(0,s.jsx)(n.code,{children:"complete/consistent-enum-values"})})}),(0,s.jsx)(n.td,{children:"Requires consistent enum values"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/consistent-named-tuples",children:(0,s.jsx)(n.code,{children:"complete/consistent-named-tuples"})})}),(0,s.jsx)(n.td,{children:"Requires that if one or more tuple elements are named, all of them are named"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/eqeqeq-fix",children:(0,s.jsx)(n.code,{children:"complete/eqeqeq-fix"})})}),(0,s.jsxs)(n.td,{children:["Requires the use of ",(0,s.jsx)(n.code,{children:"==="})," and ",(0,s.jsx)(n.code,{children:"!=="})," (and automatically fixes)"]}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd27"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/format-jsdoc-comments",children:(0,s.jsx)(n.code,{children:"complete/format-jsdoc-comments"})})}),(0,s.jsxs)(n.td,{children:["Disallows ",(0,s.jsx)(n.code,{children:"/**"})," comments longer than N characters and multi-line comments that can be merged together"]}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd27"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/format-line-comments",children:(0,s.jsx)(n.code,{children:"complete/format-line-comments"})})}),(0,s.jsxs)(n.td,{children:["Disallows ",(0,s.jsx)(n.code,{children:"//"})," comments longer than N characters and multi-line comments that can be merged together"]}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd27"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/jsdoc-code-block-language",children:(0,s.jsx)(n.code,{children:"complete/jsdoc-code-block-language"})})}),(0,s.jsx)(n.td,{children:"Requires a language specification for every JSDoc code block"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/newline-between-switch-case",children:(0,s.jsx)(n.code,{children:"complete/newline-between-switch-case"})})}),(0,s.jsx)(n.td,{children:"Requires newlines between switch cases"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd27"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-confusing-set-methods",children:(0,s.jsx)(n.code,{children:"complete/no-confusing-set-methods"})})}),(0,s.jsx)(n.td,{children:"Disallows confusing methods for sets"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-empty-jsdoc",children:(0,s.jsx)(n.code,{children:"complete/no-empty-jsdoc"})})}),(0,s.jsx)(n.td,{children:"Disallows empty JSDoc comments"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd27"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-empty-line-comments",children:(0,s.jsx)(n.code,{children:"complete/no-empty-line-comments"})})}),(0,s.jsx)(n.td,{children:"Disallows empty line comments"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd27"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-explicit-array-loops",children:(0,s.jsx)(n.code,{children:"complete/no-explicit-array-loops"})})}),(0,s.jsx)(n.td,{children:"Disallows explicit iteration for arrays"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd27"}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-explicit-map-set-loops",children:(0,s.jsx)(n.code,{children:"complete/no-explicit-map-set-loops"})})}),(0,s.jsx)(n.td,{children:"Disallows explicit iteration for maps and sets"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd27"}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-for-in",children:(0,s.jsx)(n.code,{children:"complete/no-for-in"})})}),(0,s.jsx)(n.td,{children:'Disallows "for x in y" statements'}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-let-any",children:(0,s.jsx)(n.code,{children:"complete/no-let-any"})})}),(0,s.jsx)(n.td,{children:"Disallows declaring variables with let that do not have a type"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-mutable-return",children:(0,s.jsx)(n.code,{children:"complete/no-mutable-return"})})}),(0,s.jsx)(n.td,{children:"Disallows returning mutable arrays, maps, and sets from functions"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-number-enums",children:(0,s.jsx)(n.code,{children:"complete/no-number-enums"})})}),(0,s.jsx)(n.td,{children:"Disallows number enums"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-object-any",children:(0,s.jsx)(n.code,{children:"complete/no-object-any"})})}),(0,s.jsx)(n.td,{children:"Disallows declaring objects and arrays that do not have a type"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-object-methods-with-map-set",children:(0,s.jsx)(n.code,{children:"complete/no-object-methods-with-map-set"})})}),(0,s.jsx)(n.td,{children:"Disallows using object methods with maps and sets"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-string-length-0",children:(0,s.jsx)(n.code,{children:"complete/no-string-length-0"})})}),(0,s.jsx)(n.td,{children:"Disallows checking for empty strings via the length method in favor of direct comparison to an empty string"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-template-curly-in-string-fix",children:(0,s.jsx)(n.code,{children:"complete/no-template-curly-in-string-fix"})})}),(0,s.jsx)(n.td,{children:"Disallows template literal placeholder syntax in regular strings (and automatically fixes)"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd27"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-undefined-return-type",children:(0,s.jsx)(n.code,{children:"complete/no-undefined-return-type"})})}),(0,s.jsxs)(n.td,{children:["Disallows ",(0,s.jsx)(n.code,{children:"undefined"})," return types on functions"]}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-unnecessary-assignment",children:(0,s.jsx)(n.code,{children:"complete/no-unnecessary-assignment"})})}),(0,s.jsx)(n.td,{children:"Disallows useless assignments"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-unsafe-plusplus",children:(0,s.jsx)(n.code,{children:"complete/no-unsafe-plusplus"})})}),(0,s.jsx)(n.td,{children:'Disallow unsafe and confusing uses of the "++" and "--" operators'}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-useless-return",children:(0,s.jsx)(n.code,{children:"complete/no-useless-return"})})}),(0,s.jsx)(n.td,{children:"Disallow redundant return statements (with no auto-fixer)"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/no-void-return-type",children:(0,s.jsx)(n.code,{children:"complete/no-void-return-type"})})}),(0,s.jsxs)(n.td,{children:["Disallows ",(0,s.jsx)(n.code,{children:"void"})," return types on non-exported functions"]}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd27"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/prefer-const",children:(0,s.jsx)(n.code,{children:"complete/prefer-const"})})}),(0,s.jsxs)(n.td,{children:["Require ",(0,s.jsx)(n.code,{children:"const"})," declarations for variables that are never reassigned after declared (with no auto-fixer)"]}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/prefer-plusplus",children:(0,s.jsx)(n.code,{children:"complete/prefer-plusplus"})})}),(0,s.jsx)(n.td,{children:'Require "++" or "--" operators instead of assignment operators where applicable'}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd27"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/prefer-postfix-plusplus",children:(0,s.jsx)(n.code,{children:"complete/prefer-postfix-plusplus"})})}),(0,s.jsx)(n.td,{children:'Require "i++" instead of "++i"'}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/prefer-readonly-parameter-types",children:(0,s.jsx)(n.code,{children:"complete/prefer-readonly-parameter-types"})})}),(0,s.jsxs)(n.td,{children:["Require function parameters to be typed as ",(0,s.jsx)(n.code,{children:"readonly"})," to prevent accidental mutation of inputs"]}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/require-break",children:(0,s.jsx)(n.code,{children:"complete/require-break"})})}),(0,s.jsxs)(n.td,{children:["Requires that each case of a switch statement has a ",(0,s.jsx)(n.code,{children:"break"})," statement"]}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/require-capital-const-assertions",children:(0,s.jsx)(n.code,{children:"complete/require-capital-const-assertions"})})}),(0,s.jsx)(n.td,{children:"Requires a capital letter for named objects and arrays that have a const assertion"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd27"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/require-capital-read-only",children:(0,s.jsx)(n.code,{children:"complete/require-capital-read-only"})})}),(0,s.jsx)(n.td,{children:"Requires maps/sets/arrays with a capital letter to be read-only"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/require-unannotated-const-assertions",children:(0,s.jsx)(n.code,{children:"complete/require-unannotated-const-assertions"})})}),(0,s.jsx)(n.td,{children:"Disallows explicit type annotations for variables that have a const assertion"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/require-variadic-function-argument",children:(0,s.jsx)(n.code,{children:"complete/require-variadic-function-argument"})})}),(0,s.jsx)(n.td,{children:"Requires that variadic functions must be supplied with at least one argument"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/strict-array-methods",children:(0,s.jsx)(n.code,{children:"complete/strict-array-methods"})})}),(0,s.jsx)(n.td,{children:"Requires boolean return types on array method functions"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/strict-enums",children:(0,s.jsx)(n.code,{children:"complete/strict-enums"})})}),(0,s.jsx)(n.td,{children:"Disallows the usage of unsafe enum patterns"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/strict-undefined-functions",children:(0,s.jsx)(n.code,{children:"complete/strict-undefined-functions"})})}),(0,s.jsx)(n.td,{children:"Disallows empty return statements in functions annotated as returning undefined"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"\ud83d\udcad"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/strict-void-functions",children:(0,s.jsx)(n.code,{children:"complete/strict-void-functions"})})}),(0,s.jsx)(n.td,{children:"Disallows non-empty return statements in functions annotated as returning void"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"automatic-fixing",children:"Automatic Fixing"}),"\n",(0,s.jsxs)(n.p,{children:["You probably already use ",(0,s.jsx)(n.a,{href:"https://prettier.io/",children:"Prettier"}),", which is helpful to automatically format files. You probably even have your IDE set up to run Prettier every time your save a file. This kind of thing saves you a tremendous amount of time - you can type out a bunch of code completely unformatted, and then press ",(0,s.jsx)(n.code,{children:"Ctrl + s"})," at the end to automatically fix everything. (Alternatively, you could press ",(0,s.jsx)(n.code,{children:"Ctrl + shift + f"})," to format the file without saving it, but it's simpler to just use one hotkey for everything.)"]}),"\n",(0,s.jsxs)(n.p,{children:["In a similar way to Prettier, this ESLint plugin contains several rules that are designed to automatically apply whenever you save the file (like the ",(0,s.jsx)(n.a,{href:"eslint-plugin-complete/rules/format-jsdoc-comments",children:(0,s.jsx)(n.code,{children:"complete/format-jsdoc-comments"})}),' rule). These rules are "fixers", which are applied when ESLint is executed with the "--fix" flag. So, in the same way that you configure Prettier to run on save, you should also configure ',(0,s.jsx)(n.code,{children:"eslint --fix"})," to run on save."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, if you use ",(0,s.jsx)(n.a,{href:"https://code.visualstudio.com/",children:"VSCode"}),", and you have the ",(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode",children:"Prettier"})," and the ",(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint",children:"ESLint"})," extensions installed, you can add the following to your repository's ",(0,s.jsx)(n.code,{children:".vscode/settings.json"})," file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsonc",children:'{\n  // Automatically run the formatter when certain files are saved.\n  "[javascript][typescript][javascriptreact][typescriptreact]": {\n    "editor.codeActionsOnSave": {\n      "source.fixAll.eslint": "explicit",\n    },\n    "editor.defaultFormatter": "esbenp.prettier-vscode",\n    "editor.formatOnSave": true,\n  },\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"comment-formatting",children:"Comment Formatting"}),"\n",(0,s.jsxs)(n.p,{children:["For a discussion around comments and the motivations for some of the comment rules in the plugin, see ",(0,s.jsx)(n.a,{href:"/eslint-plugin-complete/comments",children:"this page"}),"."]})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},1184:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var s=t(4041);const l={},i=s.createContext(l);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);