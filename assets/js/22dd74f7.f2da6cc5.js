"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1567],{5226:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Overview","href":"/overview","docId":"overview","unlisted":false},{"type":"category","label":"complete-common","items":[{"type":"link","label":"Constants","href":"/complete-common/constants","docId":"complete-common/constants","unlisted":false},{"type":"category","label":"Functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"functions/array","href":"/complete-common/functions/array","docId":"complete-common/functions/array","unlisted":false},{"type":"link","label":"functions/assert","href":"/complete-common/functions/assert","docId":"complete-common/functions/assert","unlisted":false},{"type":"link","label":"functions/enums","href":"/complete-common/functions/enums","docId":"complete-common/functions/enums","unlisted":false},{"type":"link","label":"functions/map","href":"/complete-common/functions/map","docId":"complete-common/functions/map","unlisted":false},{"type":"link","label":"functions/math","href":"/complete-common/functions/math","docId":"complete-common/functions/math","unlisted":false},{"type":"link","label":"functions/object","href":"/complete-common/functions/object","docId":"complete-common/functions/object","unlisted":false},{"type":"link","label":"functions/random","href":"/complete-common/functions/random","docId":"complete-common/functions/random","unlisted":false},{"type":"link","label":"functions/set","href":"/complete-common/functions/set","docId":"complete-common/functions/set","unlisted":false},{"type":"link","label":"functions/sort","href":"/complete-common/functions/sort","docId":"complete-common/functions/sort","unlisted":false},{"type":"link","label":"functions/string","href":"/complete-common/functions/string","docId":"complete-common/functions/string","unlisted":false},{"type":"link","label":"functions/tuple","href":"/complete-common/functions/tuple","docId":"complete-common/functions/tuple","unlisted":false},{"type":"link","label":"functions/types","href":"/complete-common/functions/types","docId":"complete-common/functions/types","unlisted":false},{"type":"link","label":"functions/utils","href":"/complete-common/functions/utils","docId":"complete-common/functions/utils","unlisted":false}]},{"type":"category","label":"Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"types/AddSubtract","href":"/complete-common/types/AddSubtract","docId":"complete-common/types/AddSubtract","unlisted":false},{"type":"link","label":"types/CompositionTypeSatisfiesEnum","href":"/complete-common/types/CompositionTypeSatisfiesEnum","docId":"complete-common/types/CompositionTypeSatisfiesEnum","unlisted":false},{"type":"link","label":"types/ERange","href":"/complete-common/types/ERange","docId":"complete-common/types/ERange","unlisted":false},{"type":"link","label":"types/IRange","href":"/complete-common/types/IRange","docId":"complete-common/types/IRange","unlisted":false},{"type":"link","label":"types/Immutable","href":"/complete-common/types/Immutable","docId":"complete-common/types/Immutable","unlisted":false},{"type":"link","label":"types/NaturalNumbersLessThan","href":"/complete-common/types/NaturalNumbersLessThan","docId":"complete-common/types/NaturalNumbersLessThan","unlisted":false},{"type":"link","label":"types/NaturalNumbersLessThanOrEqualTo","href":"/complete-common/types/NaturalNumbersLessThanOrEqualTo","docId":"complete-common/types/NaturalNumbersLessThanOrEqualTo","unlisted":false},{"type":"link","label":"types/ObjectValues","href":"/complete-common/types/ObjectValues","docId":"complete-common/types/ObjectValues","unlisted":false},{"type":"link","label":"types/ReadonlyMap","href":"/complete-common/types/ReadonlyMap","docId":"complete-common/types/ReadonlyMap","unlisted":false},{"type":"link","label":"types/ReadonlyRecord","href":"/complete-common/types/ReadonlyRecord","docId":"complete-common/types/ReadonlyRecord","unlisted":false},{"type":"link","label":"types/ReadonlySet","href":"/complete-common/types/ReadonlySet","docId":"complete-common/types/ReadonlySet","unlisted":false},{"type":"link","label":"types/Tuple","href":"/complete-common/types/Tuple","docId":"complete-common/types/Tuple","unlisted":false},{"type":"link","label":"types/WidenLiteral","href":"/complete-common/types/WidenLiteral","docId":"complete-common/types/WidenLiteral","unlisted":false},{"type":"link","label":"types/Writeable","href":"/complete-common/types/Writeable","docId":"complete-common/types/Writeable","unlisted":false}]}],"collapsed":true,"collapsible":true,"href":"/complete-common"},{"type":"link","label":"complete-lint","href":"/complete-lint","docId":"complete-lint","unlisted":false},{"type":"category","label":"complete-node","items":[{"type":"category","label":"Enums","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"enums/PackageManager","href":"/complete-node/enums/PackageManager","docId":"complete-node/enums/PackageManager","unlisted":false}]},{"type":"category","label":"Functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"functions/arkType","href":"/complete-node/functions/arkType","docId":"complete-node/functions/arkType","unlisted":false},{"type":"link","label":"functions/base64","href":"/complete-node/functions/base64","docId":"complete-node/functions/base64","unlisted":false},{"type":"link","label":"functions/build","href":"/complete-node/functions/build","docId":"complete-node/functions/build","unlisted":false},{"type":"link","label":"functions/commandExists","href":"/complete-node/functions/commandExists","docId":"complete-node/functions/commandExists","unlisted":false},{"type":"link","label":"functions/env","href":"/complete-node/functions/env","docId":"complete-node/functions/env","unlisted":false},{"type":"link","label":"functions/execa","href":"/complete-node/functions/execa","docId":"complete-node/functions/execa","unlisted":false},{"type":"link","label":"functions/file","href":"/complete-node/functions/file","docId":"complete-node/functions/file","unlisted":false},{"type":"link","label":"functions/git","href":"/complete-node/functions/git","docId":"complete-node/functions/git","unlisted":false},{"type":"link","label":"functions/jsonc","href":"/complete-node/functions/jsonc","docId":"complete-node/functions/jsonc","unlisted":false},{"type":"link","label":"functions/markdown","href":"/complete-node/functions/markdown","docId":"complete-node/functions/markdown","unlisted":false},{"type":"link","label":"functions/monorepo","href":"/complete-node/functions/monorepo","docId":"complete-node/functions/monorepo","unlisted":false},{"type":"link","label":"functions/monorepoPublish","href":"/complete-node/functions/monorepoPublish","docId":"complete-node/functions/monorepoPublish","unlisted":false},{"type":"link","label":"functions/monorepoUpdate","href":"/complete-node/functions/monorepoUpdate","docId":"complete-node/functions/monorepoUpdate","unlisted":false},{"type":"link","label":"functions/npm","href":"/complete-node/functions/npm","docId":"complete-node/functions/npm","unlisted":false},{"type":"link","label":"functions/nukeDependencies","href":"/complete-node/functions/nukeDependencies","docId":"complete-node/functions/nukeDependencies","unlisted":false},{"type":"link","label":"functions/packageJSON","href":"/complete-node/functions/packageJSON","docId":"complete-node/functions/packageJSON","unlisted":false},{"type":"link","label":"functions/packageManager","href":"/complete-node/functions/packageManager","docId":"complete-node/functions/packageManager","unlisted":false},{"type":"link","label":"functions/scriptHelpers","href":"/complete-node/functions/scriptHelpers","docId":"complete-node/functions/scriptHelpers","unlisted":false},{"type":"link","label":"functions/string","href":"/complete-node/functions/string","docId":"complete-node/functions/string","unlisted":false},{"type":"link","label":"functions/time","href":"/complete-node/functions/time","docId":"complete-node/functions/time","unlisted":false},{"type":"link","label":"functions/update","href":"/complete-node/functions/update","docId":"complete-node/functions/update","unlisted":false},{"type":"link","label":"functions/utils","href":"/complete-node/functions/utils","docId":"complete-node/functions/utils","unlisted":false}]},{"type":"category","label":"Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"types/DependencyType","href":"/complete-node/types/DependencyType","docId":"complete-node/types/DependencyType","unlisted":false}]}],"collapsed":true,"collapsible":true,"href":"/complete-node"},{"type":"link","label":"complete-tsconfig","href":"/complete-tsconfig","docId":"complete-tsconfig","unlisted":false},{"type":"link","label":"eslint-config-complete","href":"/eslint-config-complete","docId":"eslint-config-complete","unlisted":false},{"type":"category","label":"eslint-plugin-complete","items":[{"type":"link","label":"Comments","href":"/eslint-plugin-complete/comments","docId":"eslint-plugin-complete/comments","unlisted":false},{"type":"category","label":"Rules","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"complete-sentences-jsdoc","href":"/eslint-plugin-complete/rules/complete-sentences-jsdoc","docId":"eslint-plugin-complete/rules/complete-sentences-jsdoc","unlisted":false},{"type":"link","label":"complete-sentences-line-comments","href":"/eslint-plugin-complete/rules/complete-sentences-line-comments","docId":"eslint-plugin-complete/rules/complete-sentences-line-comments","unlisted":false},{"type":"link","label":"consistent-enum-values","href":"/eslint-plugin-complete/rules/consistent-enum-values","docId":"eslint-plugin-complete/rules/consistent-enum-values","unlisted":false},{"type":"link","label":"consistent-named-tuples","href":"/eslint-plugin-complete/rules/consistent-named-tuples","docId":"eslint-plugin-complete/rules/consistent-named-tuples","unlisted":false},{"type":"link","label":"eqeqeq-fix","href":"/eslint-plugin-complete/rules/eqeqeq-fix","docId":"eslint-plugin-complete/rules/eqeqeq-fix","unlisted":false},{"type":"link","label":"format-jsdoc-comments","href":"/eslint-plugin-complete/rules/format-jsdoc-comments","docId":"eslint-plugin-complete/rules/format-jsdoc-comments","unlisted":false},{"type":"link","label":"format-line-comments","href":"/eslint-plugin-complete/rules/format-line-comments","docId":"eslint-plugin-complete/rules/format-line-comments","unlisted":false},{"type":"link","label":"jsdoc-code-block-language","href":"/eslint-plugin-complete/rules/jsdoc-code-block-language","docId":"eslint-plugin-complete/rules/jsdoc-code-block-language","unlisted":false},{"type":"link","label":"newline-between-switch-case","href":"/eslint-plugin-complete/rules/newline-between-switch-case","docId":"eslint-plugin-complete/rules/newline-between-switch-case","unlisted":false},{"type":"link","label":"no-confusing-set-methods","href":"/eslint-plugin-complete/rules/no-confusing-set-methods","docId":"eslint-plugin-complete/rules/no-confusing-set-methods","unlisted":false},{"type":"link","label":"no-empty-jsdoc","href":"/eslint-plugin-complete/rules/no-empty-jsdoc","docId":"eslint-plugin-complete/rules/no-empty-jsdoc","unlisted":false},{"type":"link","label":"no-empty-line-comments","href":"/eslint-plugin-complete/rules/no-empty-line-comments","docId":"eslint-plugin-complete/rules/no-empty-line-comments","unlisted":false},{"type":"link","label":"no-explicit-array-loops","href":"/eslint-plugin-complete/rules/no-explicit-array-loops","docId":"eslint-plugin-complete/rules/no-explicit-array-loops","unlisted":false},{"type":"link","label":"no-explicit-map-set-loops","href":"/eslint-plugin-complete/rules/no-explicit-map-set-loops","docId":"eslint-plugin-complete/rules/no-explicit-map-set-loops","unlisted":false},{"type":"link","label":"no-for-in","href":"/eslint-plugin-complete/rules/no-for-in","docId":"eslint-plugin-complete/rules/no-for-in","unlisted":false},{"type":"link","label":"no-let-any","href":"/eslint-plugin-complete/rules/no-let-any","docId":"eslint-plugin-complete/rules/no-let-any","unlisted":false},{"type":"link","label":"no-mutable-return","href":"/eslint-plugin-complete/rules/no-mutable-return","docId":"eslint-plugin-complete/rules/no-mutable-return","unlisted":false},{"type":"link","label":"no-number-enums","href":"/eslint-plugin-complete/rules/no-number-enums","docId":"eslint-plugin-complete/rules/no-number-enums","unlisted":false},{"type":"link","label":"no-object-any","href":"/eslint-plugin-complete/rules/no-object-any","docId":"eslint-plugin-complete/rules/no-object-any","unlisted":false},{"type":"link","label":"no-object-methods-with-map-set","href":"/eslint-plugin-complete/rules/no-object-methods-with-map-set","docId":"eslint-plugin-complete/rules/no-object-methods-with-map-set","unlisted":false},{"type":"link","label":"no-string-length-0","href":"/eslint-plugin-complete/rules/no-string-length-0","docId":"eslint-plugin-complete/rules/no-string-length-0","unlisted":false},{"type":"link","label":"no-template-curly-in-string-fix","href":"/eslint-plugin-complete/rules/no-template-curly-in-string-fix","docId":"eslint-plugin-complete/rules/no-template-curly-in-string-fix","unlisted":false},{"type":"link","label":"no-undefined-return-type","href":"/eslint-plugin-complete/rules/no-undefined-return-type","docId":"eslint-plugin-complete/rules/no-undefined-return-type","unlisted":false},{"type":"link","label":"no-unnecessary-assignment","href":"/eslint-plugin-complete/rules/no-unnecessary-assignment","docId":"eslint-plugin-complete/rules/no-unnecessary-assignment","unlisted":false},{"type":"link","label":"no-unsafe-plusplus","href":"/eslint-plugin-complete/rules/no-unsafe-plusplus","docId":"eslint-plugin-complete/rules/no-unsafe-plusplus","unlisted":false},{"type":"link","label":"no-useless-return","href":"/eslint-plugin-complete/rules/no-useless-return","docId":"eslint-plugin-complete/rules/no-useless-return","unlisted":false},{"type":"link","label":"no-void-return-type","href":"/eslint-plugin-complete/rules/no-void-return-type","docId":"eslint-plugin-complete/rules/no-void-return-type","unlisted":false},{"type":"link","label":"prefer-const","href":"/eslint-plugin-complete/rules/prefer-const","docId":"eslint-plugin-complete/rules/prefer-const","unlisted":false},{"type":"link","label":"prefer-plusplus","href":"/eslint-plugin-complete/rules/prefer-plusplus","docId":"eslint-plugin-complete/rules/prefer-plusplus","unlisted":false},{"type":"link","label":"prefer-postfix-plusplus","href":"/eslint-plugin-complete/rules/prefer-postfix-plusplus","docId":"eslint-plugin-complete/rules/prefer-postfix-plusplus","unlisted":false},{"type":"link","label":"prefer-readonly-parameter-types","href":"/eslint-plugin-complete/rules/prefer-readonly-parameter-types","docId":"eslint-plugin-complete/rules/prefer-readonly-parameter-types","unlisted":false},{"type":"link","label":"require-break","href":"/eslint-plugin-complete/rules/require-break","docId":"eslint-plugin-complete/rules/require-break","unlisted":false},{"type":"link","label":"require-capital-const-assertions","href":"/eslint-plugin-complete/rules/require-capital-const-assertions","docId":"eslint-plugin-complete/rules/require-capital-const-assertions","unlisted":false},{"type":"link","label":"require-capital-read-only","href":"/eslint-plugin-complete/rules/require-capital-read-only","docId":"eslint-plugin-complete/rules/require-capital-read-only","unlisted":false},{"type":"link","label":"require-unannotated-const-assertions","href":"/eslint-plugin-complete/rules/require-unannotated-const-assertions","docId":"eslint-plugin-complete/rules/require-unannotated-const-assertions","unlisted":false},{"type":"link","label":"require-variadic-function-argument","href":"/eslint-plugin-complete/rules/require-variadic-function-argument","docId":"eslint-plugin-complete/rules/require-variadic-function-argument","unlisted":false},{"type":"link","label":"strict-array-methods","href":"/eslint-plugin-complete/rules/strict-array-methods","docId":"eslint-plugin-complete/rules/strict-array-methods","unlisted":false},{"type":"link","label":"strict-enums","href":"/eslint-plugin-complete/rules/strict-enums","docId":"eslint-plugin-complete/rules/strict-enums","unlisted":false},{"type":"link","label":"strict-undefined-functions","href":"/eslint-plugin-complete/rules/strict-undefined-functions","docId":"eslint-plugin-complete/rules/strict-undefined-functions","unlisted":false},{"type":"link","label":"strict-void-functions","href":"/eslint-plugin-complete/rules/strict-void-functions","docId":"eslint-plugin-complete/rules/strict-void-functions","unlisted":false}]}],"collapsed":true,"collapsible":true,"href":"/eslint-plugin-complete"}]},"docs":{"complete-common":{"id":"complete-common","title":"complete-common","description":"npm version","sidebar":"docs"},"complete-common/constants":{"id":"complete-common/constants","title":"Constants","description":"Variables","sidebar":"docs"},"complete-common/functions/array":{"id":"complete-common/functions/array","title":"functions/array","description":"Helper functions that have to do with arrays.","sidebar":"docs"},"complete-common/functions/assert":{"id":"complete-common/functions/assert","title":"functions/assert","description":"Helper functions that have to do with asserting.","sidebar":"docs"},"complete-common/functions/enums":{"id":"complete-common/functions/enums","title":"functions/enums","description":"Helper functions that have to do with TypeScript enums.","sidebar":"docs"},"complete-common/functions/map":{"id":"complete-common/functions/map","title":"functions/map","description":"Helper functions that have to do with","sidebar":"docs"},"complete-common/functions/math":{"id":"complete-common/functions/math","title":"functions/math","description":"Helper functions that have to do with math.","sidebar":"docs"},"complete-common/functions/object":{"id":"complete-common/functions/object","title":"functions/object","description":"Helper functions that have to do with objects.","sidebar":"docs"},"complete-common/functions/random":{"id":"complete-common/functions/random","title":"functions/random","description":"Helper functions that have to do with getting random values.","sidebar":"docs"},"complete-common/functions/set":{"id":"complete-common/functions/set","title":"functions/set","description":"Helper functions that have to do with","sidebar":"docs"},"complete-common/functions/sort":{"id":"complete-common/functions/sort","title":"functions/sort","description":"Helper functions that have to do with sorting.","sidebar":"docs"},"complete-common/functions/string":{"id":"complete-common/functions/string","title":"functions/string","description":"Helper functions that have to do with strings.","sidebar":"docs"},"complete-common/functions/tuple":{"id":"complete-common/functions/tuple","title":"functions/tuple","description":"Helper functions that have to do with TypeScript tuples.","sidebar":"docs"},"complete-common/functions/types":{"id":"complete-common/functions/types","title":"functions/types","description":"Identity functions that help with narrowing.","sidebar":"docs"},"complete-common/functions/utils":{"id":"complete-common/functions/utils","title":"functions/utils","description":"Helper functions that do not belong to any category in particular.","sidebar":"docs"},"complete-common/types/AddSubtract":{"id":"complete-common/types/AddSubtract","title":"types/AddSubtract","description":"Type Aliases","sidebar":"docs"},"complete-common/types/CompositionTypeSatisfiesEnum":{"id":"complete-common/types/CompositionTypeSatisfiesEnum","title":"types/CompositionTypeSatisfiesEnum","description":"Type Aliases","sidebar":"docs"},"complete-common/types/ERange":{"id":"complete-common/types/ERange","title":"types/ERange","description":"Type Aliases","sidebar":"docs"},"complete-common/types/Immutable":{"id":"complete-common/types/Immutable","title":"types/Immutable","description":"Type Aliases","sidebar":"docs"},"complete-common/types/IRange":{"id":"complete-common/types/IRange","title":"types/IRange","description":"Type Aliases","sidebar":"docs"},"complete-common/types/NaturalNumbersLessThan":{"id":"complete-common/types/NaturalNumbersLessThan","title":"types/NaturalNumbersLessThan","description":"Type Aliases","sidebar":"docs"},"complete-common/types/NaturalNumbersLessThanOrEqualTo":{"id":"complete-common/types/NaturalNumbersLessThanOrEqualTo","title":"types/NaturalNumbersLessThanOrEqualTo","description":"Type Aliases","sidebar":"docs"},"complete-common/types/ObjectValues":{"id":"complete-common/types/ObjectValues","title":"types/ObjectValues","description":"Type Aliases","sidebar":"docs"},"complete-common/types/ReadonlyMap":{"id":"complete-common/types/ReadonlyMap","title":"types/ReadonlyMap","description":"Variables","sidebar":"docs"},"complete-common/types/ReadonlyRecord":{"id":"complete-common/types/ReadonlyRecord","title":"types/ReadonlyRecord","description":"Type Aliases","sidebar":"docs"},"complete-common/types/ReadonlySet":{"id":"complete-common/types/ReadonlySet","title":"types/ReadonlySet","description":"Variables","sidebar":"docs"},"complete-common/types/Tuple":{"id":"complete-common/types/Tuple","title":"types/Tuple","description":"Type Aliases","sidebar":"docs"},"complete-common/types/WidenLiteral":{"id":"complete-common/types/WidenLiteral","title":"types/WidenLiteral","description":"Type Aliases","sidebar":"docs"},"complete-common/types/Writeable":{"id":"complete-common/types/Writeable","title":"types/Writeable","description":"Type Aliases","sidebar":"docs"},"complete-lint":{"id":"complete-lint","title":"complete-lint","description":"npm version","sidebar":"docs"},"complete-node":{"id":"complete-node","title":"complete-node","description":"npm version","sidebar":"docs"},"complete-node/enums/PackageManager":{"id":"complete-node/enums/PackageManager","title":"enums/PackageManager","description":"Enumerations","sidebar":"docs"},"complete-node/functions/arkType":{"id":"complete-node/functions/arkType","title":"functions/arkType","description":"These are functions having to do with getting the directory of the calling function and getting","sidebar":"docs"},"complete-node/functions/base64":{"id":"complete-node/functions/base64","title":"functions/base64","description":"Functions","sidebar":"docs"},"complete-node/functions/build":{"id":"complete-node/functions/build","title":"functions/build","description":"Functions","sidebar":"docs"},"complete-node/functions/commandExists":{"id":"complete-node/functions/commandExists","title":"functions/commandExists","description":"Functions","sidebar":"docs"},"complete-node/functions/env":{"id":"complete-node/functions/env","title":"functions/env","description":"Functions","sidebar":"docs"},"complete-node/functions/execa":{"id":"complete-node/functions/execa","title":"functions/execa","description":"These are functions having to do with running commands in a Bash-like TypeScript script.","sidebar":"docs"},"complete-node/functions/file":{"id":"complete-node/functions/file","title":"functions/file","description":"Functions","sidebar":"docs"},"complete-node/functions/git":{"id":"complete-node/functions/git","title":"functions/git","description":"Functions","sidebar":"docs"},"complete-node/functions/jsonc":{"id":"complete-node/functions/jsonc","title":"functions/jsonc","description":"Functions","sidebar":"docs"},"complete-node/functions/markdown":{"id":"complete-node/functions/markdown","title":"functions/markdown","description":"Functions","sidebar":"docs"},"complete-node/functions/monorepo":{"id":"complete-node/functions/monorepo","title":"functions/monorepo","description":"Functions","sidebar":"docs"},"complete-node/functions/monorepoPublish":{"id":"complete-node/functions/monorepoPublish","title":"functions/monorepoPublish","description":"Functions","sidebar":"docs"},"complete-node/functions/monorepoUpdate":{"id":"complete-node/functions/monorepoUpdate","title":"functions/monorepoUpdate","description":"Functions","sidebar":"docs"},"complete-node/functions/npm":{"id":"complete-node/functions/npm","title":"functions/npm","description":"Functions","sidebar":"docs"},"complete-node/functions/nukeDependencies":{"id":"complete-node/functions/nukeDependencies","title":"functions/nukeDependencies","description":"Functions","sidebar":"docs"},"complete-node/functions/packageJSON":{"id":"complete-node/functions/packageJSON","title":"functions/packageJSON","description":"Functions","sidebar":"docs"},"complete-node/functions/packageManager":{"id":"complete-node/functions/packageManager","title":"functions/packageManager","description":"Functions","sidebar":"docs"},"complete-node/functions/scriptHelpers":{"id":"complete-node/functions/scriptHelpers","title":"functions/scriptHelpers","description":"Type Aliases","sidebar":"docs"},"complete-node/functions/string":{"id":"complete-node/functions/string","title":"functions/string","description":"Functions","sidebar":"docs"},"complete-node/functions/time":{"id":"complete-node/functions/time","title":"functions/time","description":"Functions","sidebar":"docs"},"complete-node/functions/update":{"id":"complete-node/functions/update","title":"functions/update","description":"Functions","sidebar":"docs"},"complete-node/functions/utils":{"id":"complete-node/functions/utils","title":"functions/utils","description":"Functions","sidebar":"docs"},"complete-node/types/DependencyType":{"id":"complete-node/types/DependencyType","title":"types/DependencyType","description":"Type Aliases","sidebar":"docs"},"complete-tsconfig":{"id":"complete-tsconfig","title":"complete-tsconfig","description":"npm version","sidebar":"docs"},"eslint-config-complete":{"id":"eslint-config-complete","title":"eslint-config-complete","description":"npm version","sidebar":"docs"},"eslint-plugin-complete":{"id":"eslint-plugin-complete","title":"eslint-plugin-complete","description":"npm version","sidebar":"docs"},"eslint-plugin-complete/comments":{"id":"eslint-plugin-complete/comments","title":"Comments","description":"eslint-plugin-complete contains several rules that make working with comments very strict. Why would anyone want to subject themselves to that?","sidebar":"docs"},"eslint-plugin-complete/rules/complete-sentences-jsdoc":{"id":"eslint-plugin-complete/rules/complete-sentences-jsdoc","title":"complete-sentences-jsdoc","description":"Requires complete sentences for JSDoc comments.","sidebar":"docs"},"eslint-plugin-complete/rules/complete-sentences-line-comments":{"id":"eslint-plugin-complete/rules/complete-sentences-line-comments","title":"complete-sentences-line-comments","description":"Requires complete sentences for multi-line leading line comments.","sidebar":"docs"},"eslint-plugin-complete/rules/consistent-enum-values":{"id":"eslint-plugin-complete/rules/consistent-enum-values","title":"consistent-enum-values","description":"Requires that all enum values exactly match the enum name, like this:","sidebar":"docs"},"eslint-plugin-complete/rules/consistent-named-tuples":{"id":"eslint-plugin-complete/rules/consistent-named-tuples","title":"consistent-named-tuples","description":"Requires that if one or more tuple elements are named, all of them are named.","sidebar":"docs"},"eslint-plugin-complete/rules/eqeqeq-fix":{"id":"eslint-plugin-complete/rules/eqeqeq-fix","title":"eqeqeq-fix","description":"Requires the use of === and !== (and automatically fixes).","sidebar":"docs"},"eslint-plugin-complete/rules/format-jsdoc-comments":{"id":"eslint-plugin-complete/rules/format-jsdoc-comments","title":"format-jsdoc-comments","description":"Disallows / comments longer than N characters and multi-line comments that can be merged together.","sidebar":"docs"},"eslint-plugin-complete/rules/format-line-comments":{"id":"eslint-plugin-complete/rules/format-line-comments","title":"format-line-comments","description":"Disallows // comments longer than N characters and multi-line comments that can be merged together.","sidebar":"docs"},"eslint-plugin-complete/rules/jsdoc-code-block-language":{"id":"eslint-plugin-complete/rules/jsdoc-code-block-language","title":"jsdoc-code-block-language","description":"Requires a language specification for every JSDoc code block.","sidebar":"docs"},"eslint-plugin-complete/rules/newline-between-switch-case":{"id":"eslint-plugin-complete/rules/newline-between-switch-case","title":"newline-between-switch-case","description":"Requires newlines between switch cases. Having newlines between each case can make code easier to read, as it better delineates each block.","sidebar":"docs"},"eslint-plugin-complete/rules/no-confusing-set-methods":{"id":"eslint-plugin-complete/rules/no-confusing-set-methods","title":"no-confusing-set-methods","description":"Disallows the Set.keys and the Set.entries methods.","sidebar":"docs"},"eslint-plugin-complete/rules/no-empty-jsdoc":{"id":"eslint-plugin-complete/rules/no-empty-jsdoc","title":"no-empty-jsdoc","description":"Disallows empty JSDoc comments (and automatically removes them).","sidebar":"docs"},"eslint-plugin-complete/rules/no-empty-line-comments":{"id":"eslint-plugin-complete/rules/no-empty-line-comments","title":"no-empty-line-comments","description":"Disallows empty line comments (and automatically removes them).","sidebar":"docs"},"eslint-plugin-complete/rules/no-explicit-array-loops":{"id":"eslint-plugin-complete/rules/no-explicit-array-loops","title":"no-explicit-array-loops","description":"Disallows explicit iteration for arrays.","sidebar":"docs"},"eslint-plugin-complete/rules/no-explicit-map-set-loops":{"id":"eslint-plugin-complete/rules/no-explicit-map-set-loops","title":"no-explicit-map-set-loops","description":"Disallows explicit iteration for maps and sets.","sidebar":"docs"},"eslint-plugin-complete/rules/no-for-in":{"id":"eslint-plugin-complete/rules/no-for-in","title":"no-for-in","description":"Disallows \\"for x in y\\" statements.","sidebar":"docs"},"eslint-plugin-complete/rules/no-let-any":{"id":"eslint-plugin-complete/rules/no-let-any","title":"no-let-any","description":"Disallows declaring variables with let that do not have a type.","sidebar":"docs"},"eslint-plugin-complete/rules/no-mutable-return":{"id":"eslint-plugin-complete/rules/no-mutable-return","title":"no-mutable-return","description":"Disallows returning mutable arrays, maps, and sets from functions.","sidebar":"docs"},"eslint-plugin-complete/rules/no-number-enums":{"id":"eslint-plugin-complete/rules/no-number-enums","title":"no-number-enums","description":"Disallows number enums.","sidebar":"docs"},"eslint-plugin-complete/rules/no-object-any":{"id":"eslint-plugin-complete/rules/no-object-any","title":"no-object-any","description":"Disallows declaring objects and arrays that do not have a type.","sidebar":"docs"},"eslint-plugin-complete/rules/no-object-methods-with-map-set":{"id":"eslint-plugin-complete/rules/no-object-methods-with-map-set","title":"no-object-methods-with-map-set","description":"Disallows using the Object.entries, Object.keys, and Object.values methods with maps and sets, since doing this is virtually always a bug.","sidebar":"docs"},"eslint-plugin-complete/rules/no-string-length-0":{"id":"eslint-plugin-complete/rules/no-string-length-0","title":"no-string-length-0","description":"Disallows checking for empty strings via the length method in favor of direct comparison to an empty string, since the latter is shorter and easier to read.","sidebar":"docs"},"eslint-plugin-complete/rules/no-template-curly-in-string-fix":{"id":"eslint-plugin-complete/rules/no-template-curly-in-string-fix","title":"no-template-curly-in-string-fix","description":"Disallows template literal placeholder syntax in regular strings (and automatically fixes).","sidebar":"docs"},"eslint-plugin-complete/rules/no-undefined-return-type":{"id":"eslint-plugin-complete/rules/no-undefined-return-type","title":"no-undefined-return-type","description":"Disallows undefined return types on functions.","sidebar":"docs"},"eslint-plugin-complete/rules/no-unnecessary-assignment":{"id":"eslint-plugin-complete/rules/no-unnecessary-assignment","title":"no-unnecessary-assignment","description":"Disallows useless assignments.","sidebar":"docs"},"eslint-plugin-complete/rules/no-unsafe-plusplus":{"id":"eslint-plugin-complete/rules/no-unsafe-plusplus","title":"no-unsafe-plusplus","description":"Disallow unsafe and confusing uses of the ++ and -- operators.","sidebar":"docs"},"eslint-plugin-complete/rules/no-useless-return":{"id":"eslint-plugin-complete/rules/no-useless-return","title":"no-useless-return","description":"Disallows redundant return statements.","sidebar":"docs"},"eslint-plugin-complete/rules/no-void-return-type":{"id":"eslint-plugin-complete/rules/no-void-return-type","title":"no-void-return-type","description":"Disallows void return types on non-exported functions.","sidebar":"docs"},"eslint-plugin-complete/rules/prefer-const":{"id":"eslint-plugin-complete/rules/prefer-const","title":"prefer-const","description":"Requires const declarations for variables that are never reassigned after declared.","sidebar":"docs"},"eslint-plugin-complete/rules/prefer-plusplus":{"id":"eslint-plugin-complete/rules/prefer-plusplus","title":"prefer-plusplus","description":"Require ++ or -- operators instead of assignment operators where applicable.","sidebar":"docs"},"eslint-plugin-complete/rules/prefer-postfix-plusplus":{"id":"eslint-plugin-complete/rules/prefer-postfix-plusplus","title":"prefer-postfix-plusplus","description":"Require i++ instead of ++i (and i-- instead of --i).","sidebar":"docs"},"eslint-plugin-complete/rules/prefer-readonly-parameter-types":{"id":"eslint-plugin-complete/rules/prefer-readonly-parameter-types","title":"prefer-readonly-parameter-types","description":"Require function parameters to be typed as readonly to prevent accidental mutation of inputs.","sidebar":"docs"},"eslint-plugin-complete/rules/require-break":{"id":"eslint-plugin-complete/rules/require-break","title":"require-break","description":"Requires that each non-fallthrough case of a switch statement has a break statement.","sidebar":"docs"},"eslint-plugin-complete/rules/require-capital-const-assertions":{"id":"eslint-plugin-complete/rules/require-capital-const-assertions","title":"require-capital-const-assertions","description":"Requires a capital letter for named objects and arrays that have a const assertion.","sidebar":"docs"},"eslint-plugin-complete/rules/require-capital-read-only":{"id":"eslint-plugin-complete/rules/require-capital-read-only","title":"require-capital-read-only","description":"Requires maps/sets/arrays with a capital letter to be read-only.","sidebar":"docs"},"eslint-plugin-complete/rules/require-unannotated-const-assertions":{"id":"eslint-plugin-complete/rules/require-unannotated-const-assertions","title":"require-unannotated-const-assertions","description":"Disallows explicit type annotations for variables that have a const assertion.","sidebar":"docs"},"eslint-plugin-complete/rules/require-variadic-function-argument":{"id":"eslint-plugin-complete/rules/require-variadic-function-argument","title":"require-variadic-function-argument","description":"Requires that variadic functions must be supplied with at least one argument.","sidebar":"docs"},"eslint-plugin-complete/rules/strict-array-methods":{"id":"eslint-plugin-complete/rules/strict-array-methods","title":"strict-array-methods","description":"Requires boolean return types on the following array method functions:","sidebar":"docs"},"eslint-plugin-complete/rules/strict-enums":{"id":"eslint-plugin-complete/rules/strict-enums","title":"strict-enums","description":"Disallows the usage of unsafe enum patterns. Designed to be used in addition to @typescript-eslint/no-unsafe-enum-comparison.","sidebar":"docs"},"eslint-plugin-complete/rules/strict-undefined-functions":{"id":"eslint-plugin-complete/rules/strict-undefined-functions","title":"strict-undefined-functions","description":"Disallows empty return statements in functions annotated as returning undefined.","sidebar":"docs"},"eslint-plugin-complete/rules/strict-void-functions":{"id":"eslint-plugin-complete/rules/strict-void-functions","title":"strict-void-functions","description":"Disallows non-empty return statements in functions annotated as returning void.","sidebar":"docs"},"overview":{"id":"overview","title":"Overview","description":"Complete is a collection of packages to make working with TypeScript easier.","sidebar":"docs"}}}}')}}]);