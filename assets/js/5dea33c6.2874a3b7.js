"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6755],{2846:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var l=t(1085),i=t(1184);const s={},r="no-template-curly-in-string-fix",o={id:"eslint-plugin-complete/rules/no-template-curly-in-string-fix",title:"no-template-curly-in-string-fix",description:"Disallows template literal placeholder syntax in regular strings (and automatically fixes).",source:"@site/docs/eslint-plugin-complete/rules/no-template-curly-in-string-fix.md",sourceDirName:"eslint-plugin-complete/rules",slug:"/eslint-plugin-complete/rules/no-template-curly-in-string-fix",permalink:"/eslint-plugin-complete/rules/no-template-curly-in-string-fix",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"no-string-length-0",permalink:"/eslint-plugin-complete/rules/no-string-length-0"},next:{title:"no-undefined-return-type",permalink:"/eslint-plugin-complete/rules/no-undefined-return-type"}},c={},a=[{value:"Rule Details",id:"rule-details",level:2},{value:"Gotchas",id:"gotchas",level:2},{value:"Options and Defaults",id:"options-and-defaults",level:2},{value:"Resources",id:"resources",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"no-template-curly-in-string-fix",children:(0,l.jsx)(n.code,{children:"no-template-curly-in-string-fix"})})}),"\n",(0,l.jsx)(n.p,{children:"Disallows template literal placeholder syntax in regular strings (and automatically fixes)."}),"\n",(0,l.jsxs)(n.p,{children:["This is a replacement for the ESLint ",(0,l.jsx)(n.a,{href:"https://eslint.org/docs/latest/rules/no-template-curly-in-string",children:(0,l.jsx)(n.code,{children:"no-template-curly-in-string"})})," rule that includes the ability for ",(0,l.jsx)(n.code,{children:"--fix"})," to work properly."]}),"\n",(0,l.jsx)(n.h2,{id:"rule-details",children:"Rule Details"}),"\n",(0,l.jsxs)(n.p,{children:["The official ESLint ",(0,l.jsx)(n.a,{href:"https://eslint.org/docs/latest/rules/no-template-curly-in-string",children:(0,l.jsx)(n.code,{children:"no-template-curly-in-string"})})," rule works like this:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'// Bad\nconst fooString = "foo: ${foo}";\n\n// Good\nconst fooString = `foo: ${foo}`;\n'})}),"\n",(0,l.jsxs)(n.p,{children:["This is a fantastic rule, as the use of quotes in this situation is almost always a bug. However, ESLint will not automatically fix this for you when using the ",(0,l.jsx)(n.code,{children:"--fix"})," flag, unlike other rules. This is because ESLint does not want to break code in the extremely rare case where the programmer did this intentionally."]}),"\n",(0,l.jsx)(n.p,{children:"To get around this, use this rule instead."}),"\n",(0,l.jsx)(n.h2,{id:"gotchas",children:"Gotchas"}),"\n",(0,l.jsx)(n.p,{children:"If you use this rule, make sure to turn off the vanilla ESLint rule, like this:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "rules": {\n    "no-template-curly-in-string": "off"\n  }\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"Otherwise, the two rules will conflict with each other."}),"\n",(0,l.jsxs)(n.p,{children:["Note that if you use the ",(0,l.jsx)(n.code,{children:"recommended"})," config that comes with this plugin, then the vanilla ESLint rule will be turned off automatically."]}),"\n",(0,l.jsx)(n.h2,{id:"options-and-defaults",children:"Options and Defaults"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "rules": {\n    "complete/no-template-curly-in-string-fix": "error"\n  }\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"This rule is not configurable."}),"\n",(0,l.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"../..",children:"How to use this rule"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/complete-ts/complete/blob/main/packages/eslint-plugin-complete/src/rules/no-template-curly-in-string-fix.ts",children:"Rule source"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/complete-ts/complete/blob/main/packages/eslint-plugin-complete/tests/rules/no-template-curly-in-string-fix.test.ts",children:"Test source"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},1184:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var l=t(4041);const i={},s=l.createContext(i);function r(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);