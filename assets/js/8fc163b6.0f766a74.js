"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6420],{7114:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>a});var t=r(1085),s=r(1184);const d={},c="functions/map",i={id:"complete-common/functions/map",title:"functions/map",description:"Helper functions that have to do with",source:"@site/docs/complete-common/functions/map.md",sourceDirName:"complete-common/functions",slug:"/complete-common/functions/map",permalink:"/complete-common/functions/map",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"functions/enums",permalink:"/complete-common/functions/enums"},next:{title:"functions/math",permalink:"/complete-common/functions/math"}},l={},a=[{value:"Functions",id:"functions",level:2},{value:"mapFilter()",id:"mapfilter",level:3},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"mapFind()",id:"mapfind",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"objectToMap()",id:"objecttomap",level:3},{value:"Type Parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"objectToReadonlyMap()",id:"objecttoreadonlymap",level:3},{value:"Type Parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"functionsmap",children:"functions/map"})}),"\n",(0,t.jsxs)(n.p,{children:["Helper functions that have to do with\n",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",children:"maps"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(n.h3,{id:"mapfilter",children:"mapFilter()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function mapFilter<K, V>(map, predicate): V[]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Helper function to get the values in a ",(0,t.jsx)(n.code,{children:"Map"})," that match an arbitrary condition. Similar to the\n",(0,t.jsx)(n.code,{children:"Array.map"})," method, but works for maps."]}),"\n",(0,t.jsx)(n.p,{children:"This is efficient such that it avoids converting the map values into an array."}),"\n",(0,t.jsxs)(n.p,{children:["If you want to perform a filter and a map at the same time on an array, use the ",(0,t.jsx)(n.code,{children:"filterMap"}),"\nhelper function instead."]}),"\n",(0,t.jsx)(n.h4,{id:"type-parameters",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.th,{children:"Type Parameter"})})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"K"})})}),(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"V"})})})]})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"map"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"ReadonlyMap"}),"<",(0,t.jsx)(n.code,{children:"K"}),", ",(0,t.jsx)(n.code,{children:"V"}),">"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"predicate"})}),(0,t.jsxs)(n.td,{children:["(",(0,t.jsx)(n.code,{children:"value"}),") => ",(0,t.jsx)(n.code,{children:"boolean"})]})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"V"}),"[]"]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/complete-ts/complete/blob/e4c07d57386e06c666c5f47f1c78d667b6ec4f62/packages/complete-common/src/functions/map.ts#L18",children:"functions/map.ts:18"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"mapfind",children:"mapFind()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function mapFind<K, V>(map, predicate): V | undefined\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Helper function to find a value in a ",(0,t.jsx)(n.code,{children:"Map"}),". Similar to the ",(0,t.jsx)(n.code,{children:"Array.find"})," method, but works for\nmaps."]}),"\n",(0,t.jsx)(n.p,{children:"This is efficient such that it avoids converting the map values into an array."}),"\n",(0,t.jsx)(n.h4,{id:"type-parameters-1",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.th,{children:"Type Parameter"})})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"K"})})}),(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"V"})})})]})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"map"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"ReadonlyMap"}),"<",(0,t.jsx)(n.code,{children:"K"}),", ",(0,t.jsx)(n.code,{children:"V"}),">"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"predicate"})}),(0,t.jsxs)(n.td,{children:["(",(0,t.jsx)(n.code,{children:"value"}),") => ",(0,t.jsx)(n.code,{children:"boolean"})]})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"V"})," | ",(0,t.jsx)(n.code,{children:"undefined"})]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/complete-ts/complete/blob/e4c07d57386e06c666c5f47f1c78d667b6ec4f62/packages/complete-common/src/functions/map.ts#L40",children:"functions/map.ts:40"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"objecttomap",children:"objectToMap()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function objectToMap<K, V>(object): Map<K, V>\n"})}),"\n",(0,t.jsx)(n.p,{children:"Helper function to convert an object to a map."}),"\n",(0,t.jsxs)(n.p,{children:["This is useful when you need to construct a type safe object with the ",(0,t.jsx)(n.code,{children:"satisfies"})," operator, but\nthen later on you need to query it in a way where you expect the return value to be T or\nundefined. In this situation, by converting the object to a map, you can avoid unsafe type\nassertions."]}),"\n",(0,t.jsxs)(n.p,{children:["Note that the map values will be inserted in a random order, due to how ",(0,t.jsx)(n.code,{children:"pairs"})," works under the\nhood."]}),"\n",(0,t.jsxs)(n.p,{children:["Also see the ",(0,t.jsx)(n.code,{children:"objectToReadonlyMap"})," function."]}),"\n",(0,t.jsx)(n.h4,{id:"type-parameters-2",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.th,{children:"Type Parameter"})})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsx)(n.tr,{children:(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"K"})," ",(0,t.jsx)(n.em,{children:"extends"})," ",(0,t.jsx)(n.code,{children:"string"})," | ",(0,t.jsx)(n.code,{children:"number"})," | ",(0,t.jsx)(n.code,{children:"symbol"})]})}),(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"V"})})})]})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"object"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"Record"}),"<",(0,t.jsx)(n.code,{children:"K"}),", ",(0,t.jsx)(n.code,{children:"V"}),">"]})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Map"}),"<",(0,t.jsx)(n.code,{children:"K"}),", ",(0,t.jsx)(n.code,{children:"V"}),">"]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/complete-ts/complete/blob/e4c07d57386e06c666c5f47f1c78d667b6ec4f62/packages/complete-common/src/functions/map.ts#L68",children:"functions/map.ts:68"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"objecttoreadonlymap",children:"objectToReadonlyMap()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function objectToReadonlyMap<K, V>(object): ReadonlyMap<K, V>\n"})}),"\n",(0,t.jsx)(n.p,{children:"Helper function to convert an object to a read-only map."}),"\n",(0,t.jsxs)(n.p,{children:["This is useful when you need to construct a type safe object with the ",(0,t.jsx)(n.code,{children:"satisfies"})," operator, but\nthen later on you need to query it in a way where you expect the return value to be T or\nundefined. In this situation, by converting the object to a map, you can avoid unsafe type\nassertions."]}),"\n",(0,t.jsxs)(n.p,{children:["Note that the map values will be inserted in a random order, due to how ",(0,t.jsx)(n.code,{children:"pairs"})," works under the\nhood."]}),"\n",(0,t.jsxs)(n.p,{children:["Also see the ",(0,t.jsx)(n.code,{children:"objectToMap"})," function."]}),"\n",(0,t.jsx)(n.h4,{id:"type-parameters-3",children:"Type Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.th,{children:"Type Parameter"})})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsx)(n.tr,{children:(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"K"})," ",(0,t.jsx)(n.em,{children:"extends"})," ",(0,t.jsx)(n.code,{children:"string"})," | ",(0,t.jsx)(n.code,{children:"number"})," | ",(0,t.jsx)(n.code,{children:"symbol"})]})}),(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"V"})})})]})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"object"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"Record"}),"<",(0,t.jsx)(n.code,{children:"K"}),", ",(0,t.jsx)(n.code,{children:"V"}),">"]})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ReadonlyMap"}),"<",(0,t.jsx)(n.code,{children:"K"}),", ",(0,t.jsx)(n.code,{children:"V"}),">"]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/complete-ts/complete/blob/e4c07d57386e06c666c5f47f1c78d667b6ec4f62/packages/complete-common/src/functions/map.ts#L93",children:"functions/map.ts:93"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},1184:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>i});var t=r(4041);const s={},d=t.createContext(s);function c(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);